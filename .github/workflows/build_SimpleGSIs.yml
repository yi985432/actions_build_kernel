name: build_SimpleGSIs

on:
#  release:
#    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]
    
env:
  ROM_URL: https://hugeota.d.miui.com/20.6.23/miui_RAPHAEL_20.6.23_5c97acac79_10.0.zip
  ROM_NAME: MIUI
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
       - name: Checkout
         uses: actions/checkout@master
       
       - name: Free up space
         run: |
           docker rmi `docker images -q`
           sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
           sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
           sudo -E apt-get update
           sudo -E apt-get -y autoremove --purge
           sudo -E apt-get clean 
           
       - name: Initialization environment
         run: |
            sudo -E apt-get -qq update
            sudo -E apt-get -qq install git openjdk-8-jdk wget wget p7zip p7zip-full
       
       - name: Download SimpleGSIs Source Code
         run: wget -P ./ "https://xiaopei.yaoxiaonie.workers.dev/Acitons/SimpleGSIs.7z"
       
       - name: Decompression SimpleGSIs.7z
         run: |
              7z x ./SimpleGSIs.7z -o"./"
              sudo chmod -R 777 SimpleGSIs
              cd SimpleGSIs
              sudo bash setup.sh
       
       - name: Download Stock Rom & Generate GSI
         run: sudo ./SimpleGSIs/url2GSI.sh $ROM_URL $ROM_NAME
       
       - name: Compress the MiuiGSI Aonly & AB
         run: |
              AGSI=$(ls ./SimpleGSIs/output | grep "Aonly" | grep "img")
              AConfig=$(ls ./SimpleGSIs/output | grep "Aonly" | grep "txt")
              ABGSI=$(ls ./SimpleGSIs/output | grep "AB" | grep "img")
              ABConfig=$(ls ./SimpleGSIs/output | grep "AB" | grep "txt")
              mkdir Final
              mkdir Final/Aonly
              mkdir Final/AB
              mkdir Final/AB-output
              mkdir Final/A-output
              mv "SimpleGSIs/output/$AGSI" Final/Aonly
              mv "SimpleGSIs/output/$AConfig" Final/Aonly
              mv "SimpleGSIs/output/$ABGSI" Final/AB
              mv "SimpleGSIs/output/$ABConfig" Final/AB
              AIMG_NAME=$(ls ./Final/Aonly | grep "txt" | sed 's/.txt//')
              ABIMG_NAME=$(ls ./Final/AB | grep "txt" | sed 's/.txt//')
              7z a Final/A-output/"$AIMG_NAME".7z ./Final/Aonly/*
              sudo rm -rf ./Final/Aonly/*.img
              7z a Final/AB-output/"$ABIMG_NAME".7z ./Final/AB/*
              sudo rm -rf ./Final/AB/*.img

       - name: Upload AonlyGSI to GoFile
         run: |
              curl -sL https://git.io/file-transfer | sh
              ./transfer gof Final/A-output/*.7z

       - name: Upload ABGSI to GoFile
         run: |
              curl -sL https://git.io/file-transfer | sh
              ./transfer gof Final/AB-output/*.7z
         
            
