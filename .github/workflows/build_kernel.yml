name: build_kernel

on:
#  release:
#    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]
    
env:
  KERNEL_URL: https://github.com/yaoxiaonie/android_kernel_xiaomi_gemini.git
  GCC_ARM64: https://bitbucket.org/matthewdalex/aarch64-linux-android-8.x.git
  GCC_ARM: https://bitbucket.org/matthewdalex/arm-linux-androideabi-8.x.git
  CLANG: https://github.com/yaoxiaonie/clang.git
  GCC_ARM64_TYPE: aarch64-linux-android
  GCC_ARM_TYPE: arm-linux-androideabi
  DEFCONFIG_NAME: gemini_defconfig
  BUILD_USER: Actions
  BUILD_HOST: MistyRain
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
       - name: Checkout
         uses: actions/checkout@master
           
       - name: Initialization environment
         run: |
            sudo -E apt-get -qq update
            sudo -E apt-get -qq install -y openssl ccache bc bash git-core gnupg build-essential zip curl make automake autogen autoconf autotools-dev libtool shtool python  m4 gcc libtool zlib1g-dev flex gcc-aarch64-linux-gnu libssl-dev
       
       - name: Clone the kernel code
         run: |
            sudo git clone $KERNEL_URL kernel
            
       - name: Clone the cross compiler
         run: |
            sudo git clone $GCC_ARM gcc-arm32
            sudo git clone $GCC_ARM64 gcc-arm64
            sudo git clone $CLANG clang
       
       - name: Start build kernel
         run: |
            sudo curl -L https://github.com/yaoxiaonie/actions_build_kernel/releases/download/1.4/build-kernel.sh -o ./build-kernel.sh
            sudo chmod 777 build-kernel.sh
            sudo bash ./build-kernel.sh "kernel" "${DEFCONFIG_NAME}" "${BUILD_USER}" "${BUILD_HOST}" "${GCC_ARM64_TYPE}" "${GCC_ARM_TYPE}"
            
